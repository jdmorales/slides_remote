<!DOCTYPE html>
<html>
<head>
  <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


  <link rel="stylesheet" href="/styles/app/css/reveal.css">
  <link rel="stylesheet" href="/styles/app/css/black.css">
  <link rel="stylesheet" href="/styles/app/libs/zenburn.css">
  <link rel="stylesheet" href="/bower_components/simple-line-icons/css/simple-line-icons.css">
  <!--link rel="stylesheet" href="/styles/app/font/league-gothic/league-gothic.css">
  <link rel="stylesheet" href="/styles/app/font/source-sans-pro/source-sans-pro.css"-->
  <link rel="stylesheet" href="/styles/importer_app.css">

</head>

<body ng-app="adminSlidesRemote">
<%- body %>



<!--
    Client-side Templates
    ========================

    HTML templates are important prerequisites of modern, rich client applications.
    To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
    that you load these templates client-side.

    By default, your Gruntfile is configured to automatically load and precompile
    client-side JST templates in your `assets/templates` folder, then
    include them here automatically (between TEMPLATES and TEMPLATES END).

    To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:

        + Import templates from other directories
        + Use a different template engine (handlebars, jade, dust, etc.)
        + Internationalize your client-side templates using a server-side
          stringfile before they're served.
-->

<!--TEMPLATES-->

<!--TEMPLATES END-->


<!--

  Client-side Javascript
  ========================

  You can always bring in JS files manually with `script` tags, or asynchronously
  on the client using a solution like AMD (RequireJS).  Or, if you like, you can
  take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

  By default, files in your `assets/js` folder are included here
  automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
  CoffeeScript (.coffee) are supported. In production, your scripts will be minified
  and concatenated into a single file.

  To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
  For example, here are a few things you could do:

      + Change the order of your scripts
      + Import scripts from other directories
      + Use a different preprocessor, like TypeScript

-->

<!--script src="lib/js/head.min.js"></script>
<script src="js/reveal.js"></script-->

<script src="/js/dependencies/sails.io.js"></script>

<script src="/bower_components/jquery/dist/jquery.js"></script>
<script src="/bower_components/angular/angular.min.js"></script>

<script src="/angular-slides/adminSlidesRemote.js"></script>
<script src="/angular-slides/appSlidesRemote.js"></script>

</body>
</html>
